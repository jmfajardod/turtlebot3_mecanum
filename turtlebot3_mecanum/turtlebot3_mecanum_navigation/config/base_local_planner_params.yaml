TrajectoryPlannerROS:

# Robot Configuration Parameters
  max_vel_x:  0.22 # The maximum forward velocity allowed for the base in meters/sec
  min_vel_x: -0.22 # Guarantee that velocity commands sent to a mobile base are high enough to allow the base to overcome friction

  max_vel_theta:  2.75
  min_vel_theta:  1.37
  min_in_place_vel_theta: 1.0

  acc_lim_x: 2.5
  acc_lim_y: 0.0
  acc_lim_theta: 3.2

# Robot configuration
  holonomic_robot: false

# Goal Tolerance Parameters
  xy_goal_tolerance: 0.05
  yaw_goal_tolerance: 0.17
  latch_xy_goal_tolerance: false  # If goal tolerance is latched, if the robot ever reaches the goal xy
                                  # location it will simply rotate in place, even if it ends up outside
                                  # the goal tolerance while it is doing so.


# Forward Simulation Parameters
  sim_time: 1.5 # The amount of time to forward-simulate trajectories in seconds
  sim_granularity: 0.025 # The step size, in meters, to take between points on a given trajectory
  vx_samples: 40 # The number of samples to use when exploring the x velocity space
  vtheta_samples: 40 # The number of samples to use when exploring the theta velocity space

  controller_frequency: 10 # The frequency at which this controller will be called in Hz. 
                            # Uses searchParam to read the parameter from parent namespaces 
                            # if not set in the namespace of the controller.

# Trajectory Scoring Parameters
  dwa: true
  meter_scoring: false
  path_distance_bias: 32.0 # The weighting for how much the controller should stay close to the path it was given
  goal_distance_bias: 20.0 # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  occdist_scale: 0.02 # The weighting for how much the controller should attempt to avoid obstacles
  heading_lookahead: 0.325 # How far to look ahead in meters when scoring different in-place-rotation trajectories


# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05 # How far the robot must travel in meters before oscillation flags are reset

# Debugging
  publish_cost_grid_pc: true # Whether or not to publish the cost grid that the planner will use when planning

